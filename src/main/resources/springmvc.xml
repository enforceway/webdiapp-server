<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
				        http://www.springframework.org/schema/context 
				        http://www.springframework.org/schema/context/spring-context-4.1.xsd
				        http://www.springframework.org/schema/mvc 
				        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

    <!-- 2 触发Annotation的启用 -->
    <!-- 会自动注册RequestMappingHandlerMapping与RequestMappingHandlerAdapter两个Bean， 
	这是SpringMVC为@Controllers分发请求所必需的，并提供了数据绑定支持、@NumberFormatannotation支持、 @DateTimeFormat支持、@Valid支持、读写XML的支持和读写JSON的支持等功能。 -->
	<mvc:annotation-driven />

	<!-- 放行了以/static/开始的请求 -->
	<mvc:resources location="/assets/" mapping="/assets/**"/> 

	<!-- 使用默认的Servlet来响应静态文件 -->
	<mvc:default-servlet-handler />
	
	<!-- 拦截器 
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/users"/>
			<mvc:mapping path="/questionaire/*"/>
			<mvc:mapping path="/question/*"/>
			<mvc:exclude-mapping path="/users/login"/>
			<bean name="LoginInterceptor" class="com.webdiapp.access.login.LoginInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	-->
	
	
	
	<!-- 7  扫描 controller -->
	<!-- 启用注解扫描，并定义组件查找规则 ，mvc层只负责扫描@Controller、@ControllerAdvice -->
	<context:component-scan base-package="com.webdiapp.controllers"
		use-default-filters="false">
		<!-- 扫描@Controller -->
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.RestController" />
		<!-- 控制器增强，使一个Contoller成为全局的异常处理类，类中用@ExceptionHandler方法注解的方法可以处理所有Controller发生的异常 -->
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	
    <!-- 8容器自动扫描IOC组件 
     com.webdiapp.services, com.webdiapp.dao
    -->
    
	<!-- 启用注解扫描，并定义组件查找规则 ，除了@controller，扫描所有的Bean -->
	<context:component-scan base-package="com.webdiapp.services.*,com.webdiapp.mapper">
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController" />
	</context:component-scan>
	
	
	
	

	<!-- 视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 前缀 -->
		<property name="prefix">
			<value>/WEB-INF/pages/</value>
		</property>
		<!-- 后缀 -->
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<bean id="stringConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 输出对象转JSON支持 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
							<value>text/plain;charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
</beans>
